# Generated by Django 3.1.4 on 2020-12-10 19:22

import apps.accounts.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('profile', models.IntegerField(choices=[(1, 'Administrador'), (2, 'Anunciante')], default=2, help_text='Tipo de usu치rio', verbose_name='Perfil')),
                ('email', models.EmailField(help_text='Email do usu치rio', max_length=255, unique=True, verbose_name='E-mail')),
                ('first_name', models.CharField(blank=True, default='', help_text='Nome do usu치rio', max_length=80, verbose_name='Nome')),
                ('last_name', models.CharField(blank=True, default='', help_text='Sobrenome do usu치rio', max_length=80, verbose_name='Sobrenome')),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', apps.accounts.managers.UserManager()),
            ],
        ),
    ]
